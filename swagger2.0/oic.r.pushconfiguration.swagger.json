{
  "swagger": "2.0",
  "info": {
    "title": "Push Configuration",
    "version": "2022-06-15",
    "license": {
      "name": "OCF Data Model License",
      "url": "https://github.com/openconnectivityfoundation/core/blob/e28a9e0a92e17042ba3e83661e4c0fbce8bdc4ba/LICENSE.md",
      "x-copyright": "Copyright 2019 Open Connectivity Foundation, Inc. All rights reserved."
    },
    "termsOfService": "https://openconnectivityfoundation.github.io/core/DISCLAIMER.md"
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/PushConfigurationResURI?if=oic.if.ll" : {
      "get": {
        "description": "Collection of oic.r.notificationselector with associated push proxies.\nAllows a Server to be configured with one or more Push Notification destinations.\n",
        "parameters": [
          {"$ref": "#/parameters/interface-ll"}
        ],
        "responses": {
          "200": {
            "description" : "",
            "x-example": [
              {"href": "/pushconfig/1", "rt": ["oic.r.notificationselector","oic.r.pushproxy"], "if": ["oic.if.rw","oic.if.baseline"], "eps": [{"ep": "coaps://[fe80::b1d6]:1122"}]},
              {"href": "/pushconfig/2", "rt": ["oic.r.notificationselector", "oic.r.pushproxy"], "if": ["oic.if.rw","oic.if.baseline"], "eps": [{"ep": "coaps://[fe80::b1d6]:1122"}]}
            ],
            "schema": { "$ref": "#/definitions/links-in-response" }
          }
        }
      }
    },
    "/PushConfigurationResURI?if=oic.if.baseline" : {
      "get": {
        "description": "Collection of oic.r.notificationselector and associated push proxies.\nAllows a Server to be configured with one or more Push Notification destinations.\n",
        "parameters": [
          {"$ref": "#/parameters/interface-baseline"}
        ],
        "responses": {
          "200": {
            "description" : "",
            "x-example": {
              "rt": ["oic.r.pushconfiguration"],
              "if": ["oic.if.ll","oic.if.create","oic.if.baseline"],
              "rts": ["oic.r.notificationselector", "oic.r.pushproxy"], 
              "links": [
                {"href": "/pushconfig/1", "rt": ["oic.r.notificationselector","oic.r.pushproxy"], "if": ["oic.if.rw","oic.if.baseline"], "eps": [{"ep": "coaps://[fe80::b1d6]:1122"}]},
                {"href": "/pushconfig/2", "rt": ["oic.r.notificationselector", "oic.r.pushproxy"], "if": ["oic.if.rw","oic.if.baseline"], "eps": [{"ep": "coaps://[fe80::b1d6]:1122"}]}
              ]
            },
            "schema": { "$ref": "#/definitions/get-baseline-response" }
          }
        }
      }
    },
    "/PushConfigurationResURI?if=oic.if.create" : {
      "post": {
        "description": "Collection of oic.r.notificationselector and associated push proxies.\nAllows a Server to be configured with one or more Push Notification destinations.\n",
        "parameters": [
          {
            "$ref": "#/parameters/interface-create"
          },
          {
            "$ref": "#/parameters/body-create"
          }
        ],
        "responses": {
          "201": {
            "description" : "new link and corresponding target Resource are created",
            "x-example": {
              "href": "/pushconfig/1",
              "rt": ["oic.r.notificationselector", "oic.r.pushproxy"],
              "if": ["oic.if.baseline", "oic.if.rw"],
              "ins": 4213291245,
              "p": { "bm": 3 },
              "rep": {
                "rt": ["oic.r.notificationselector", "oic.r.pushproxy"],
                "if": ["oic.if.rw", "oic.if.baseline"],
                "phref": "/myAirquality",
                "prt": [
                  "oic.r.airquality"
                ],
                "pushtarget" : "coaps://[2001::200]:49355/pushed-resource-airquality",
                "sourcert": [
                  "oic.r.pushpayload"
                ],
                "state": "waitingforupdate"
              } 
            },
            "schema": { "$ref": "#/definitions/post-create-response" }
          }
        }
      }
    }
  },
  "parameters": {
    "interface-baseline" : {
      "in" : "query",
      "name" : "if",
      "type" : "string",
      "enum" : ["oic.if.baseline"]
    },
    "interface-ll" : {
      "in" : "query",
      "name" : "if",
      "type" : "string",
      "enum" : ["oic.if.ll"]
    },
    "interface-create" : {
      "in" : "query",
      "name" : "if",
      "type" : "string",
      "enum" : ["oic.if.create"]
    },
    "body-create" : {
      "in" : "body",
      "name" : "notificationselector-pushproxy",
      "required" : true,
      "schema" : {
        "$ref" : "#/definitions/post-create-request"
      },
      "x-example" : {
        "rt": [ "oic.r.notificationselector", "oic.r.pushproxy" ], 
        "if": [ "oic.if.rw", "oic.if.baseline" ], 
        "rep": {
          "phref": "/myFilterResURI",
          "prt": [
            "oic.r.airquality"
          ],
          "pushtarget" : "coaps://[2001::200]:49355/pushed-resource-filter",
          "sourcert": [
            "oic.r.pushpayload"
          ]
        }
      }
    }
  },
  "definitions": {
    "oic.oic-link": {
      "type": "object",
      "properties": {
        "if": {
          "description": "The OCF Interface set supported by the target Resource",
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "readOnly": true,
          "items": {
            "type": "string",
            "maxLength": 64,
            "enum": [
              "oic.if.baseline",
              "oic.if.rw"
            ]
          }
        },
        "rt": {
          "description": "Resource Type of the target Resource",
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "readOnly": true,
          "items": {
            "enum": [
              "oic.r.notificationselector",
              "oic.r.pushproxy"
            ],
            "type": "string",
            "maxLength": 64
          }
        },
        "anchor": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.links.properties.core-schema.json#/definitions/anchor"
        },
        "di": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.links.properties.core-schema.json#/definitions/di"
        },
        "eps": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.links.properties.core-schema.json#/definitions/eps"
        },
        "href": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.links.properties.core-schema.json#/definitions/href"
        },
        "ins": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.links.properties.core-schema.json#/definitions/ins"
        },
        "p": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.links.properties.core-schema.json#/definitions/p"
        },
        "rel": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.links.properties.core-schema.json#/definitions/rel_array"
        },
        "title": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.links.properties.core-schema.json#/definitions/title"
        },
        "type": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.links.properties.core-schema.json#/definitions/type"
        }
      },
      "required": [
        "href",
        "rt",
        "if"
      ]
    },
    "links-in-response": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/oic.oic-link"
      }
    },
    "get-baseline-response" : {
      "type" : "object",
      "properties": {
        "rt": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "type": "string",
            "maxLength": 64,
            "enum": ["oic.r.pushconfiguration"]
          }
        },
        "if": {
          "description": "The OCF Interface set supported by this Resource",
          "type": "array",
          "minItems": 1,
          "readOnly": true,
          "items": {
            "type": "string",
            "maxLength": 64,
            "enum": [
              "oic.if.ll",
              "oic.if.create",
              "oic.if.baseline"
            ]
          }
        },
        "n": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.common.properties.core-schema.json#/definitions/n"
        },
        "id": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.common.properties.core-schema.json#/definitions/id"
        },
        "rts": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "type": "string",
            "maxLength": 64,
            "enum": [
              "oic.r.notificationselector",
              "oic.r.pushproxy"
            ]
          }
        },
        "links": {
          "$ref": "#/definitions/links-in-response"
        }
      },
      "required": [
        "rt",
        "if",
        "links"
      ]
    },
    "rep-in-request": {
      "type": "object",
      "properties": {
        "phref": {
          "description": "URI of a Resource to be pushed",
          "type": "string",
          "maxLength": 256
        }, 
        "prt": {
          "description": "Resource type(s) of Resource(s) to be pushed",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "maxLength": 64
          }
        }, 
        "pif": {
          "description": "OCF Interface(s) of Resource(s) to be pushed",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "maxLength": 64
          }
        },
        "pushtarget": {
          "description": "Points to the target of the UPDATE operation sent as a notifcation",
          "type": "string",
          "maxLength": 256
        },
        "sourcert": {
          "description" : "Always set to oic.r.pushpayload",
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type": "string",
            "maxLength": 64,
            "enum" : [
              "oic.r.pushpayload"
            ]
          }
        },
        "state": {
          "description": "Current state of the Push Proxy",
          "type": "string",
          "enum": [
            "waitingforprovisioning",
            "waitingforupdate",
            "waitingforresponse",
            "waitingforupdatemitigation",
            "waitingforresponsemitigation",
            "error",
            "timeout"
          ]
        }
      },
      "required": [
        "pushtarget", 
        "sourcert"
      ]
    },
    "rep-in-response": {
      "type": "object",
      "properties": {
        "rt": {
          "description": "Resource Type of the target Resource",
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "readOnly": true,
          "items": {
            "enum": [
              "oic.r.notificationselector",
              "oic.r.pushproxy"
            ],
            "type": "string",
            "maxLength": 64
          }
        },
        "if": {
          "description": "The OCF Interface set supported by the target Resource",
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "readOnly": true,
          "items": {
            "type": "string",
            "maxLength": 64,
            "enum": [
              "oic.if.rw",
              "oic.if.baseline"
            ]
          }
        },
        "phref": {
          "description": "URI of a Resource to be pushed",
          "type": "string",
          "maxLength": 256
        }, 
        "prt": {
          "description": "Resource type(s) of Resource(s) to be pushed",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "maxLength": 64
          }
        }, 
        "pif": {
          "description": "OCF Interface(s) of Resource(s) to be pushed",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "maxLength": 64
          }
        },
        "pushtarget": {
          "description": "Points to the target of the UPDATE operation sent as a notifcation",
          "type": "string",
          "maxLength": 256
        },
        "sourcert": {
          "description" : "Always set to oic.r.pushpayload",
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type": "string",
            "maxLength": 64,
            "enum" : [
              "oic.r.pushpayload"
            ]
          }
        },
        "state": {
          "description": "Current state of the Push Proxy",
          "type": "string",
          "enum": [
            "waitingforprovisioning",
            "waitingforupdate",
            "waitingforresponse",
            "waitingforupdatemitigation",
            "waitingforresponsemitigation",
            "error",
            "timeout"
          ]
        }
      },
      "required": [
        "rt",
        "if",
        "pushtarget", 
        "sourcert",
        "state"
      ]
    },
    "post-create-request": {
      "type" : "object",
      "properties": {
        "rt": {
          "description": "Resource Type of the target Resource",
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "readOnly": true,
          "items": {
            "enum": [
              "oic.r.notificationselector",
              "oic.r.pushproxy"
            ],
            "type": "string",
            "maxLength": 64
          }
        },
        "if": {
          "description": "The OCF Interface set supported by the target Resource",
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "readOnly": true,
          "items": {
            "type": "string",
            "maxLength": 64,
            "enum": [
              "oic.if.rw",
              "oic.if.baseline"
            ]
          }
        },
        "rep": {
          "$ref": "#/definitions/rep-in-request"
        }
      },
      "required": [
        "rt",
        "if",
        "rep"
      ]
    },
    "post-create-response": {
      "type" : "object",
      "properties": {
        "href": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.links.properties.core-schema.json#/definitions/href"
        },
        "rt": {
          "description": "Resource Type of the target Resource",
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "readOnly": true,
          "items": {
            "enum": [
              "oic.r.notificationselector",
              "oic.r.pushproxy"
            ],
            "type": "string",
            "maxLength": 64
          }
        },
        "if": {
          "description": "The OCF Interface set supported by the target Resource",
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "readOnly": true,
          "items": {
            "type": "string",
            "maxLength": 64,
            "enum": [
              "oic.if.rw",
              "oic.if.baseline"
            ]
          }
        },
        "ins": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.links.properties.core-schema.json#/definitions/ins"
        },
        "p": {
          "$ref": "https://openconnectivityfoundation.github.io/core/schemas/oic.links.properties.core-schema.json#/definitions/p"
        },
        "rep": {
          "$ref": "#/definitions/rep-in-response"
        }
      },
      "required": [
        "href",
        "rt",
        "if",
        "ins",
        "rep"
      ]
    }
  }
}
